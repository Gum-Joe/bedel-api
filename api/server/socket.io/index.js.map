{"version":3,"sources":["socket.io/index.js"],"names":["SocketIO","api","logger","events","prefix","loadIO","io","server","on","_onConnection","bind","socket","debug","listener","hasOwnProperty","event","push"],"mappings":";;;;;;qjBAAA;;;AACA;;AACA;;;;;;;;IAEqBA,Q;AACnB,oBAAYC,GAAZ,EAAiB;AAAA;;AACf,SAAKC,MAAL,GAAcD,IAAIC,MAAlB;AACA,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKE,MAAL,GAAc,EAAd;AACA,SAAKD,MAAL,CAAYE,MAAZ,GAAqB,oCAAoB,WAApB,CAArB;AACA,SAAKC,MAAL;AACD;;AAED;;;;;;;6BAGS;AACP,WAAKC,EAAL,GAAU,sBAAG,KAAKL,GAAL,CAASM,MAAZ,CAAV;AACA,WAAKD,EAAL,CAAQE,EAAR,CAAW,YAAX,EAAyB,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAzB;AACD;;AAED;;;;;;kCAGcC,M,EAAQ;AACpB,WAAKT,MAAL,CAAYU,KAAZ,CAAkB,gDAAlB;AACA;AACA,UAAIC,iBAAJ;AAHoB;AAAA;AAAA;;AAAA;AAIpB,6BAAiB,KAAKV,MAAtB,8HAA8B;AAAzBU,kBAAyB;;AAC5B,cAAIA,SAASC,cAAT,CAAwB,OAAxB,CAAJ,EAAsC;AACpCH,mBAAOH,EAAP,CAAUK,SAASE,KAAnB,EAA0BF,SAASA,QAAT,CAAkBF,MAAlB,EAA0B,KAAKT,MAA/B,CAA1B;AACD,WAFD,MAEO;AACLW,qBAASA,QAAT,CAAkBF,MAAlB,EAA0B,KAAKT,MAA/B;AACD;AACF;AAVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWrB;;AAED;;;;;;6BAGSa,K,EAAOF,Q,EAAU;AACxB,UAAI,OAAOE,KAAP,KAAiB,UAArB,EAAiC;AAC/B,aAAKZ,MAAL,CAAYa,IAAZ,CAAiB;AACfH,oBAAUE,MAAML,IAAN,CAAW,IAAX;AADK,SAAjB;AAGD,OAJD,MAIO;AACL,aAAKP,MAAL,CAAYa,IAAZ,CAAiB;AACfD,iBAAOA,KADQ;AAEfF,oBAAUA,SAASH,IAAT,CAAc,IAAd;AAFK,SAAjB;AAID;AACF;;;;;;kBA/CkBV,Q","file":"index.js","sourcesContent":["// Socket.io entry\r\nimport { MAKE_API_LOG_PREFIX } from \"../constants\";\r\nimport io from \"socket.io\";\r\n\r\nexport default class SocketIO {\r\n  constructor(api) {\r\n    this.logger = api.logger;\r\n    this.api = api;\r\n    this.events = [];\r\n    this.logger.prefix = MAKE_API_LOG_PREFIX(\"SOCKET.IO\");\r\n    this.loadIO();\r\n  }\r\n\r\n  /**\r\n   * Loads Socket.IO\r\n   */\r\n  loadIO() {\r\n    this.io = io(this.api.server);\r\n    this.io.on(\"connection\", this._onConnection.bind(this));\r\n  }\r\n\r\n  /**\r\n   * What to do on connection\r\n   */\r\n  _onConnection(socket) {\r\n    this.logger.debug(\"A client has connected to the socket.io server\");\r\n    // Add Listeners\r\n    let listener;\r\n    for (listener of this.events) {\r\n      if (listener.hasOwnProperty(\"event\")) {\r\n        socket.on(listener.event, listener.listener(socket, this.logger));\r\n      } else {\r\n        listener.listener(socket, this.logger);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a listener\r\n   */\r\n  addEvent(event, listener) {\r\n    if (typeof event === \"function\") {\r\n      this.events.push({\r\n        listener: event.bind(this)\r\n      });\r\n    } else {\r\n      this.events.push({\r\n        event: event,\r\n        listener: listener.bind(this)\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n"]}